Claims Principle
=========================
Remarks
A principal object represents the security context of the user 
on whose behalf the code is running, 
including that user's identity (IIdentity) and 
any roles to which they belong.

ClaimsIdentity Class
Represents a claims-based identity.

ClaimPrinciple contains the ClaimsIdentity object as inner object

CLAIMS BASED ACCESS CONTROL
CLIAMS BASED IDENITY OF THE USER/ENTITY/APPLICATION
CLAIMS BASED AUTHORIZATION

Claims-based identity OF ENTITY/USER/APPLICATION
An identity described by a collection of claims. 
A claim is a statement about an entity made by an issuer 
that describes a property, right, or some other quality of that entity. 
Such an entity is said to be the subject of the claim. 
A claim is represented by the Claim class. 

The claims contained in a ClaimsIdentity describe the entity 
that the corresponding identity represents, 
and can be used to make authorization and authentication decisions. 

A claims-based access model has many advantages over 
more traditional access models that rely exclusively on roles. 

For example, claims can provide much richer information about the identity they represent 
and can be evaluated for authorization or authentication in a far more specific manner.


In application code, ClaimsIdentity objects are typically accessed through 
ClaimsPrincipal objects; for example, 
the principal returned by Thread.CurrentPrincipal.


public Claim (
string claim_type, 
string claim_value, 
string claim_valueType, 
string claim_issuer, 
string claim_originalIssuer, 
System.Security.Claims.ClaimsIdentity subject
);

A claim is a statement that one subject makes about itself or another subject. 
The statement can be about a name, identity, key, group, privilege, or capability, for example.

Claims are issued by a provider, 
and they are given one or more values and 
then packaged in security tokens that are issued by an issuer, 
commonly known as a security token service (STS). 

Claim
A statement that one subject makes about itself or another subject. 
For example, the statement can be about 
a name, identity, key, group, privilege, or capability OR ROLE

Claims are issued by a provider, => CLAIM PROVIDER / SECURITY TOKEN SERVICE
and they are given one or more values and => CLAIMS VALUES
then packaged in security tokens =< Security Token ==> Claims Bag
that are issued by a security token service (STS). 


Remarks
A claim is a statement about a subject by an issuer. 
Claims represent ATTRIBUTES OF THE SUBJECT/ENTITY/USER/APPLICATION
that are useful in the context of authentication and authorization operations. 

CLAIMS BAG/SECURITY TOKESN ARE ISSUES BY AN ISSURER AT THE TIME
OF LOGIN, THE ARE ARCHIVES AS COOKIE

SUBJECT ==> USER, ENTITY, APPLICATION

Subjects and issuers are both entities that are part of an identity scenario.

Some typical examples of a subject are: 
a user, an application or service, a device, or a computer. 

SECURITY TOKEN ISSUERS

Some typical examples of an ISSUERSare: 
the operating system, OS
an application, APPLICATION
a service, WEB SERVICE 
a role provider, ROLE PROVIDER
an identity provider, or  ID PROVIDER
a federation provider. FED PROVIDER

An ISSUER delivers claims/CLAIMS BAG by issuing security tokens, 
typically through a Security Token Service (STS). COMPONENT

(In WIF, you can build an STS by deriving from the SecurityTokenService class.) 

the CLAIMS BAG received from an issuer 
can be extended by subject (USER, ENTITY, APPLICATION) attributes 
stored directly at the DATABASE

A claim can be evaluated to determine 
access rights to DATA and other secured RESOURCES 
during the process of authorization and 
can also be used to make or express authentication decisions about a subject.

Beginning with .NET 4.5, the Windows Identity Foundation (WIF) classes, 
which implement claims-based identity, 
have been fully integrated into the .NET Framework. 

The claims concept is implemented by the Claim class.

ClaimTypes Class
Defines constants for the well-known CLAIMS TYPES that can be assigned to a subject. 
These constants define URIs for well-known claim types.

=================================================================

They are also defined by a claim value type and, possibly, associated metadata.

For a full list of definitions of terms associated with claims-based identity, 
see "Claims-Based Identity Term Definitions" at 
<A class=uri href="http://msdn.microsoft.com/en-us/library/ee534975.aspx">
http://msdn.microsoft.com/en-us/library/ee534975.aspx.

Claim name
A user-friendly name for the CLAIM TYPE.
THIS IS NOT A FILED IN ANY CLASS.
IT REFERS THE CONSTANT STRING USED FOR CLAIM TYPE
ClaimType class hold those constants strings. 
we can define our own class for such constants.
STRINGS "firstname", "role", and "email address". 

Claim type
The type of statement in the claim. TYPE OF THE CLAIM
Examples of claim types include first name, role, and email address. 
The claim type provides context for the claim value, 
and it is usually expressed as a Uniform Resource Identifier (URI). 
For example, the email address claim type is represented as 
http://schemas.microsoft.com/ws/2008/06/identity/claims/email.

Claim value
The value of the statement in the claim. 
For example, if the claim type is "role", a value might be "contributor". 
If the claim type is "firstname", a value might be "Matt".

Claim value type
The DATA type of value in the claim. 
For example, if the claim value is Contributor, the claim type value is String.

Claims-aware application
A relying-party software application that uses 
claims to manage identity and access for users.

HIGH LEVEL SEGREGATION IS UI/CONTROLLER ACTIONS FOR LOGGED IN USER
AND ANNYMOUSE USERS

SECOND LEVEL IS ROLE BASED SEGEREGATION

THIRD LEVEL IS CLAIMS BASED SEGREGATION

Claims-based identity
A unique identifier ???? that represents a specific user, application, computer, or other entity. 
It enables that entity to gain access to multiple resources, 
such as applications and network resources, 
without entering credentials multiple times. 

It also enables resources to validate requests from an entity.

Claims provider
A software component or service that can be used to 
issue one or more claims during sign-in operations. 

CLAIMS ARE ISSUED DUIRNG SIGN IN PROCESS OR SIGN UP PROCESS

It is also used to display, resolve, and provide search capabilities for claims 
in a card selector (for example, in the people picker control in SharePoint). 

WHAT TO SHOW A USER AND WHAT NOT IN A SEARCH OPERATION

For more information, see Claims provider in SharePoint.

Claims provider schema
A schema that specifies the 
fields that must be returned as metadata for a claim 
that is issued by a specific claims provider.
WHAT INFORMATION A CLAIM SHOULD HAVE IN ITSELF

Claims provider - security token service
A software component or service that is used by a claims provider 
that issues claims and packages them in security tokens.

Client Impersonation (Authorization)

THREAD IS OWNED BY A PROCESS
THREAD ARE EXECUTED USING THE SAME SECURITY PROFILE 
AS THE PROCESS THEY ARE IN

IN IMPERSONATION, WE GIVE A NEW IDENITY TO THE THREAD
WE GIVE THREAD THE IDENITY TO THE USER 
WE ASK THREAD TO EXECUTED ON THE BEHALF OF THE USER
AND DO THE OPERATION THE USER IS AUTHORIZED TO DO.

IMPERSONATION MEANS HAVING NEW IDENTITY FOR DOING SOME JOB

Impersonation is when someone pretends to be another person. 

Impersonation is the ability of a THREAD to execute 
using different security PROFILE information 
than the PROCESS that owns the THREAD.

Typically, a thread in a server application impersonates a client. 
This allows the server thread to act on behalf of that client 
to access objects on the server or 
validate access to the client's own objects


Delegate=========================
A rich client that is authorized to impersonate another client. 
For example, consider a situation in which a user-facing website, 
Web1, calls an infrastructure data service, Data2. 

It might be advantageous for Web1 to impersonate its users 
when it accesses Data2. 

WEB 1 WILL GIVE REQUIRED IDENTITY TO HIS USERS REQUEST

Web1 contacts a federation server to obtain claims 
that represent one of its users. 

When it is contacted, the federation server can determine 
whether Web1 is an authorized delegate and, 
if so, it can allow the impersonation OF WEB1 USERS

If it is authorized, Web1 accesses Data2 while acting as the user.

Identity provider================
SOPHISTICATED CLAIMS PROVIDER
An identity provider is a type of claims provider that provides single sign-on functionality 
between an organization and other claims providers and relying parties.

Identity provider'S security token service or 
relying-party'S security token service
A software component or service that is used by an identity provider 
to accept tokens from a federation partner, and 
then generate claims and security tokens on the contents of the 
incoming security token into a format consumable by the relying party. 

A security token service (STS) receives security tokens from a 
trusted federation partner or claims provider STS. 

Then, the relying party STS issues new security tokens to be consumed 
by a local relying-party application.

Relying party============
An application that relies on and uses claims in security tokens 
that a claims provider issues. 

For example, an online auction website organization 
might receive a security token with claims that determine 
whether a subject can access all or part of a relying party's application.

Relying-party application==================
Software that can consume claims 
to make authentication and authorization decisions. 
The relying party application receives the claims from a claims provider.

Security token=========CLAIMS BAG
ENCRYPTED BY THE CLIAMS ISSUER
CLAIMS ARE GENUINE
ISSUED BY AUTHENTICATED ISSURE
An on-the-wire representation of claims 
that is cryptographically signed by the issuer of the claims, 
providing strong proof to any relying party 
as to the integrity of the claims and the identity of the issuer.


Trust establishment
A process by which trust relationships are established between 
claims providers and relying-party applications. 

INDENTIFYING CERTIFICATIES

This process involves the exchange of identifying certificates 
that enable the relying party to trust the contents of claims that the claims provider issues.