@page
@model AppTemplateCore.Areas.Bootstrap.Pages.Form_Validation2Model
@{
}


@*
    In this example, we use .needs-validation, which will add the validation effect
    AFTER the form has been submitting (if there's anything missing).
    Note that you will also have to add some jQuery code for this example to work properly:

    1-.needs-validation class ON FORM
    THIS WILL ADD VALIDATION EFFECT AFTER THE FORM
    HAS BEEN SUMITTED. NOT BEFORE. BEFORE IS JUST A NORMAL FORM

    2-REQUIRED ATTRIBUTE ON THE INPUT FIELD

    3-VALID FEEDBACK MESSAGE

    4-INVALID FEEDBACK MESSAGE

    5- DIV LABLE INPUT DIV DIV

    6- class="form-group"

    7- class="form-control"

*@


<form action="/action_page.php" class="needs-validation" novalidate>

    <div class="form-group">
        <label for="uname">Username:</label>
        <input type="text" class="form-control" id="uname" placeholder="Enter username" name="uname" required>
        <div class="valid-feedback">Valid.</div>
        <div class="invalid-feedback">Please fill out this field.</div>
    </div>

    <div class="form-group">
        <label for="pwd">Password:</label>
        <input type="password" class="form-control" id="pwd" placeholder="Enter password" name="pswd" required>
        <div class="valid-feedback">Valid.</div>
        <div class="invalid-feedback">Please fill out this field.</div>
    </div>

    <div class="form-group form-check">
        <label class="form-check-label">
            <input class="form-check-input" type="checkbox" name="remember" required> I agree on blabla.
            <div class="valid-feedback">Valid.</div>
            <div class="invalid-feedback">Check this checkbox to continue.</div>
        </label>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>

</form>

<script>
    // Disable form submissions if there are invalid fields
    (function () {

        'use strict';

        window.addEventListener('load', function () {

            // Get the forms we want to add validation styles to

            var forms = document.getElementsByClassName('needs-validation');

            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {

                form.addEventListener('submit', function (event) {

                    if (form.checkValidity() === false) {

                        event.preventDefault();
                        event.stopPropagation();

                    }

                    form.classList.add('was-validated');

                }, false);
            });
        }, false);
    })();
</script>