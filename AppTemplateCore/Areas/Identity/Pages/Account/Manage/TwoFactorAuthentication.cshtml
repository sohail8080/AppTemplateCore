@page
@model TwoFactorAuthenticationModel
@{
    ViewData["Title"] = "Two-factor authentication (2FA)";
    ViewData["ActivePage"] = ManageNavPages.TwoFactorAuthentication;
}

<partial name="_StatusMessage" for="StatusMessage" />
<h4>@ViewData["Title"]</h4>

@* Show following Options if 2FA is Enabled for the User *@

@if (Model.Is2faEnabled)
{
    if (Model.RecoveryCodesLeft == 0)
    {
        <div class="alert alert-danger">
            <strong>You have no recovery codes left.</strong>
            <p>You must <a asp-page="./GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
        </div>
    }
    else if (Model.RecoveryCodesLeft == 1)
    {
        <div class="alert alert-danger">
            <strong>You have 1 recovery code left.</strong>
            <p>You can <a asp-page="./GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
        </div>
    }
    else if (Model.RecoveryCodesLeft <= 3)
    {
        <div class="alert alert-warning">
            <strong>You have @Model.RecoveryCodesLeft recovery codes left.</strong>
            <p>You should <a asp-page="./GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
        </div>
    }

    if (Model.IsMachineRemembered)
    {
        <form method="post" style="display: inline-block">
            <button type="submit" class="btn btn-primary">Forget this browser</button>
        </form>
    }
    <a asp-page="./Disable2fa" class="btn btn-primary">Disable 2FA</a>
    <a asp-page="./GenerateRecoveryCodes" class="btn btn-primary">Reset recovery codes</a>
}

@* Show following Options whether 2FA is Enabled/Diabled for User *@

<h5>Authenticator app</h5>

@*
    User has Authenticator App Key.
    This key stored in DB, generated by User Manager
*@

@if (!Model.HasAuthenticator)
{
    @*
        Auth Key is there in DB, but 2FA is not enabled, we manually disable it
        or we are going to enable it first time.
        Usually this is the case after Resetting Auth App Key
    *@

    <a id="enable-authenticator" asp-page="./EnableAuthenticator" class="btn btn-primary">
        Add authenticator app
    </a>
}
else
{
    @*
        User do not has the authenticator app key.
        this key stored in DB, generated by User Manager
        I think "Add Authenticator App" & "Setup Authenticator App" show the same View
        that View may be different if User has Key or do not has key.
    *@

    <a id="enable-authenticator" asp-page="./EnableAuthenticator" class="btn btn-primary">
        Setup authenticator app
    </a>

    @*
        After resetting Auth App Key, you need to reconfigure it on EnableAuthenticator
    *@

    <a id="reset-authenticator" asp-page="./ResetAuthenticator" class="btn btn-primary">
        Reset authenticator app
    </a>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}