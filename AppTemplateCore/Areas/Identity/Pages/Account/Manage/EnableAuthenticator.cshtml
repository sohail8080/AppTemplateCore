@page
@model EnableAuthenticatorModel
@{
    ViewData["Title"] = "Configure authenticator app";
    ViewData["ActivePage"] = ManageNavPages.TwoFactorAuthentication;
}

<partial name="_StatusMessage" for="StatusMessage" />
<h4>@ViewData["Title"]</h4>
<div>

    @*
        // This View show the all the 2FA Options
        // Provide options if User has not enabled 2FA
        // Provide options if User has already enabled 2FA
        // Home Page of 2FA
    *@

    <p>To use an authenticator app go through the following steps:</p>
    <ol class="list">
        <li>
            <p>
                Download a two-factor authenticator app like Microsoft Authenticator for
                <a href="https://go.microsoft.com/fwlink/?Linkid=825071">Windows Phone</a>,
                <a href="https://go.microsoft.com/fwlink/?Linkid=825072">Android</a> and
                <a href="https://go.microsoft.com/fwlink/?Linkid=825073">iOS</a> or
                Google Authenticator for
                <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;hl=en">Android</a> and
                <a href="https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8">iOS</a>.
            </p>
        </li>
        <li>

            @*
        Following Authenticator Key is generated by the UserManager class
        This Authenticator Key is given as input to the Authenticator App in Mobile
        Athenticator App generate a Unique Code that is given in the text box below.
        Our Application ==> Athenticator Key (User Manager Class) ==> Athenticator Mobile App  ==> Generate Unique Code ==> Input that to Our Application ==> Done
        Our Application ==> QR Code ==> Athenticator Mobile App scant that QR Code  ==> Unique Code ==> Our Application
        QR Code Generation is the headace of our application.
        Athenticator App on the Mobile just read that QR Code.
        =======================================================
        THIS IS DIFFERENT THAN NORMAL 2FA AUTHENTICATION ON MOBILE
        ==========================================================
        NORMAL 2FA: MOBILE PHONE REGISTRATION: ONE VERIFICATION CODE USED
        NOTE: SMS SENDER IS CONFIGURED BY THE WEB SITE OWNER THAT SEND SMS TO THE WHOLE WORLD
        *************************************************************
        1- USER REGISTERS HIS MOBILE NUMBER
        2- SITE SEND VERIFICATION CODE TO USER MOBILE
        3- NOW USER GIVE BACK THE VERIFICATION CODE
        4- MOBILE PHONE IS REGISTERED
        NORMAL 2FA: USER LOGIN UNDER 2FA : ONE VERIFICATION CODE USED
        1- USER LOGIN BY GIVING USER NAME PASSWORD
        2- VERIFICATION CODE IS SEND TO THE USER MOBILE USING THE CONFIGURED SMS SENDER
        3- USER GIVE BACK THE VERIRICAITON CODE
        4- USER IS AUTHENTICATED AND ALLOWED TO GO IN WEBSITE
        NOTE: SMS SENDER IS CONFIGURED BY THE WEB SITE OWNER THAT SEND SMS TO THE WHOLE WORLD
        ========================================================================
        MOBILE AUTHENTICATOR APP 2FA : TWO CODES ARE USED: AUTHENTICATOR KEYS & VERIFICATION CODE
        NOTE: I THINK AUTHENTICATOR APPS ARE ALLOWED & CONFIGURED BY THE WEBSITE BUILDER, NO SURE
        ****************************************************************************
        MOBILE AUTHENTICATOR APP 2FA : USER LOGIN UNDER 2FA : TWO CODES ARE USED: AUTHENTICATOR KEYS & VERIFICATION CODE
        1- USER LOGIN BY GIVING USER NAME PASSWORD
        2- APPLICATION SHOWS THE USER SPECIFIC AUTHENTICATOR KEYS / QR CODE SPECIFIC TO THE USER
        3- USER'S AUTHENTICATOR KEYS / QR CODE IS GIVEN AS INPUT TO THE AUTHENTICATOR APP
        4- AUTHENTICATOR APPS GIVES THE UNIQUE VERIFICATION CODE SPECIFIC TO THE USER
        5- OUR APPLICATION CONFIRMS THE UNIQUE VERIFICATION CODE, AND ALLOW THE USER TO LOGIN
        6- HOW APPLICATION CONFIRMS THE UNIQUE VERIFICATION CODE OF THE USER?
        APPLICATION GOES TO THE AUTHENTICATOR APP SERVER AND GETS THE
        VERFICATION CODE FROM THERE AND VERIFY THE VERFICATION CODE GIVEN BY USER AND GIVEN BY ATHENTICATOR APP SERVER
        IN THIS CASE, VERIFICATION CODE IS GIVEN BY THE AUTHENTICATOR APPLICATION.
        ENABLING 2FA & ADDING ATHENTICATOR IS DONE IN THE SAME STEP.
        NOTE: SMS SENDER IS CONFIGURED BY THE WEB SITE OWNER THAT SEND SMS TO THE WHOLE WORLD

            *@



            <p>

                @*
        This Model.SharedKey is generated by the UserManager specifcially for the User
        This Authenticator Application Key is saved in the Web App Database, I think
        This Auth Key generated by UserManager is given as input in Authen App

        Either we input this Auth App Key inside the Auth App in Mobile
        or We Scan the QR code generated by clicking the Link Below
        This QR Code also consume the Auth App Key + Email + App Name

                *@

                Scan the QR Code or enter this key <kbd>@Model.SharedKey</kbd> into your two factor authenticator app. Spaces and casing do not matter.

            </p>
            <div class="alert alert-info">To enable QR code generation please read our <a href="https://go.microsoft.com/fwlink/?Linkid=852423">documentation</a>.</div>
            <div id="qrCode"></div>
            <div id="qrCodeData" data-url="@Html.Raw(@Model.AuthenticatorUri)"></div>
        </li>
        <li>
            <p>
                Once you have scanned the QR code or input the key above, your two factor authentication app will provide you
                with a unique code. Enter the code in the confirmation box below.

                @*
        HOW THE OUR APPLICATION WILL KNOW THAT UNIQUE VERFICATION CODE ENTERED
        IS THE CORRECT ONE. IS THERE ANYWAY THAT APPLICATION GO ON THE WEB TO
        VERFIY THAT UNIQUE VERIFICATION CODE IS THE CORRECT.
                *@
                @*
        Once you do this, your Ethenticator App will be Hooked to the Application
        Now you can log usnder the 2FA
        Step 1- Enable 2FA
        Step 2- Hook or Enable Authenticator Application
        Step 3- Login Under 2FA by Verification Code
        Step 4- Login Under 2FA by Recover Code in case Auth App or Mobile is not available
        Step 5- Generate the Recover Codes n save them for futre use. This is only done if you enable 2FA, register Auth App
        Step 6- Generate the new Auth App Key and Reset the Auth App,
        this will invalided the previous recovery codes you need to generate the new one.
        Step 7- Disable 2FA
                *@


            </p>
            <div class="row">
                <div class="col-md-6">
                    <form id="send-code" method="post">
                        <div class="form-group">
                            <label asp-for="Input.Code" class="control-label">Verification Code</label>
                            <input asp-for="Input.Code" class="form-control" autocomplete="off" />
                            <span asp-validation-for="Input.Code" class="text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary">Verify</button>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    </form>
                </div>
            </div>
        </li>
    </ol>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}